init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./uartlite/final_response_0.claude.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression port, reg;
@@
- ioread32be(port->membase + reg)
+ uart_in32(reg, port)

HANDLING: ./uartlite/1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_receive.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 23
               with rule_elem: -ioread32be
                                 >>> uart_in32(reg, port)
                               -(-port-->-membase -+ -reg-)
               with binding: [rule starting on line 1.reg --> ULITE_RX;
                             rule starting on line 1.port --> port]
     binding out = []
     transform one node: 23
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./uartlite/1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_receive.c.sanitized.c
+++ /tmp/cocci-output-31618-48c2f8-1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_receive.c.sanitized.c
@@ -9,7 +9,7 @@ static int ulite_receive(struct uart_por
   if (stat & ULITE_STATUS_RXVALID)
     {
       port->icount.rx++;
-      ch = ioread32be(port->membase + ULITE_RX);
+      ch = uart_in32(ULITE_RX, port);
       if (stat & ULITE_STATUS_PARITY)
         port->icount.parity++;
     }
Check duplication for 1 files
