init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./ttm_bo_init-60/final_response_0.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
identifier I8;
expression E0, E1, E2, E3, E4, E5, E6, E7;
@@
- E0 = ttm_bo_init(&E1->ttm.bdev, &E2->bo, E3, E4, &E2->placement,                  E5 >> PAGE_SHIFT, false, NULL, E6, E7, E7, I8); 
+ E0 = ttm_bo_init(&E1->ttm.bdev, &E2->bo, E3, ttm_bo_type_device,                  &E2->placement, E5 >> PAGE_SHIFT, false, E6, NULL, NULL,                  ast_bo_ttm_destroy); 
// Infered from: (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_ast_ttm_ast_bo_create.{c,res.c}: ast_bo_create), (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_ast_ttm_ast_bo_create.{c,res.c}: ast_bo_create)
// Recall: 0.33, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
@@
identifier I9;
expression E0, E1, E2, E3, E4, E5, E6, E7, E8;
@@
- E0 = ttm_bo_init(&E1->ttm.bdev, &E2->bo, E3, E4, &E2->placement,                  E5 >> PAGE_SHIFT, false, NULL, E6, E7, E8, I9); 
+ E0 = ttm_bo_init(&E1->ttm.bdev, &E2->bo, E3, E4, &E2->placement,                  E5 >> PAGE_SHIFT, false, E6, E7, E8, nouveau_bo_del_ttm); 
// Infered from: (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_nouveau_bo_nouveau_bo_new.{c,res.c}: nouveau_bo_new), (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_nouveau_bo_nouveau_bo_new.{c,res.c}: nouveau_bo_new)
// False positives: (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_ast_ttm_ast_bo_create.res.c: ast_bo_create)
// Recall: 0.50, Precision: 0.75, Matching recall: 0.75

// ---------------------------------------------
@@
expression E0, E1, E2, E3, E4, E5;
@@
- E0 = ttm_bo_init(&E1->mman.bdev, &E2->tbo, E3, E4, &E2->placement, 0, !E5,                  NULL, E3, NULL, NULL, &qxl_ttm_bo_destroy); 
+ E0 = ttm_bo_init(&E1->mman.bdev, &E2->tbo, E3, E4, &E2->placement, 0, !E5,                  E3, NULL, NULL, &qxl_ttm_bo_destroy); 
// Infered from: (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_qxl_object_qxl_bo_create.{c,res.c}: qxl_bo_create), (./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_qxl_object_qxl_bo_create.{c,res.c}: qxl_bo_create)
// Recall: 0.33, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 3 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 3/3(100%)


// ---------------------------------------------

warning: line 5: should false be a metavariable?
warning: line 15: should false be a metavariable?
warning: line 25: should qxl_ttm_bo_destroy be a metavariable?
HANDLING: ./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_qxl_object_qxl_bo_create.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 11 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 11 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 22 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 22 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 50
               with rule_elem: -E0
                                 >>> E0 = ttm_bo_init(&E1->mman.bdev,
                                                      &E2->tbo, E3, E4,
                                                      &E2->placement, 0, !E5,
                                                      E3, NULL, NULL,
                                                      &qxl_ttm_bo_destroy);
                                -= -ttm_bo_init-(-&-E1-->-mman-.-bdev-,
                                                 -&-E2-->-tbo-, -E3-, -E4-,
                                                 -&-E2-->-placement-, -0-,
                                                 -!-E5-, -NULL-, -E3-,
                                                 -NULL-, -NULL-,
                                                 -&-qxl_ttm_bo_destroy-)-;
               with binding: [rule starting on line 22.E3 --> size;
                             rule starting on line 22.E5 --> kernel;
                             rule starting on line 22.E2 --> bo;
                             rule starting on line 22.E4 --> type;
                             rule starting on line 22.E1 --> qdev;
                             rule starting on line 22.E0 --> r]
     binding out = []
     transform one node: 50
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_qxl_object_qxl_bo_create.c.sanitized.c
+++ /tmp/cocci-output-32597-949919-1519311151_2018-02-22_724daa4fd65d_qxl_object_qxl_bo_create.c.sanitized.c
@@ -25,7 +25,8 @@ int qxl_bo_create(struct qxl_device *qde
   if (surf)
     bo->surf = *surf;
   qxl_ttm_placement_from_domain(bo, domain, pinned);
-  r = ttm_bo_init(&qdev->mman.bdev, &bo->tbo, size, type, &bo->placement, 0, !kernel, NULL, size, NULL, NULL, &qxl_ttm_bo_destroy);
+  r = ttm_bo_init(&qdev->mman.bdev, &bo->tbo, size, type, &bo->placement, 0,
+                  !kernel, size, NULL, NULL, &qxl_ttm_bo_destroy);
   if (unlikely(r != 0))
     {
       if (r != -ERESTARTSYS)
Check duplication for 1 files
