init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./kees_timer1/final_response_1.gpt4.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression timer_obj, handler_func, timer_data;
@@
- init_timer(&timer_obj);
- timer_obj.function = handler_func;
- timer_obj.data = timer_data;
+ setup_timer(&timer_obj, handler_func, timer_data);

HANDLING: ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_dasd_dasd_alloc_device.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 46
               with rule_elem: -init_timer-(-&-timer_obj-)-;
               with binding: [rule starting on line 1.timer_obj --> device->timer]
          transform state: 47
               with rule_elem: -timer_obj-.-function -= -handler_func-;
               with binding: [rule starting on line 1.handler_func --> dasd_device_timeout;
                             rule starting on line 1.timer_obj --> device->timer]
          transform state: 48
               with rule_elem: -timer_obj
                                 >>> setup_timer(&timer_obj, handler_func,
                                                 timer_data);
                               -.-data -= -timer_data-;
               with binding: [rule starting on line 1.timer_data --> (unsigned
                             long)device;
                             rule starting on line 1.handler_func --> dasd_device_timeout;
                             rule starting on line 1.timer_obj --> device->timer]
     binding out = []
     transform one node: 48
     transform one node: 47
     transform one node: 46
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_dasd_dasd_alloc_device.c.sanitized.c
+++ /tmp/cocci-output-30653-f87faa-1508184939_2017-10-16_b9eaf1872222_dasd_dasd_alloc_device.c.sanitized.c
@@ -25,9 +25,7 @@ struct dasd_device *dasd_alloc_device(vo
   atomic_set(&device->tasklet_scheduled, 0);
   tasklet_init(&device->tasklet, (void (*)(unsigned long))dasd_device_tasklet, (unsigned long)device);
   INIT_LIST_HEAD(&device->ccw_queue);
-  init_timer(&device->timer);
-  device->timer.function = dasd_device_timeout;
-  device->timer.data = (unsigned long)device;
+  setup_timer(&device->timer, dasd_device_timeout, (unsigned long)device);
   INIT_WORK(&device->kick_work, do_kick_device);
   INIT_WORK(&device->restore_device, do_restore_device);
   INIT_WORK(&device->reload_device, do_reload_device);
Check duplication for 1 files
