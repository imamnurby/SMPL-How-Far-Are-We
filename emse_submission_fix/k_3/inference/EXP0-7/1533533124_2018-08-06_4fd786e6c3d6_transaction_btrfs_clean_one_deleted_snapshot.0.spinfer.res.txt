init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./EXP0-7/final_response_0.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression E0, E1;
@@
- E0->objectid = E1; 
+ E0->root_key.objectid = E1; 
// Infered from: (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_disk-io___setup_root.{c.sanitized.c,res.c.sanitized.res.c}: __setup_root)
// False positives: (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_export_btrfs_encode_fh.res.c.sanitized.res.c: btrfs_encode_fh)
// Recall: 0.14, Precision: 0.50, Matching recall: 0.33

// ---------------------------------------------
@@
expression E0, E1;
@@
- E0 = BTRFS_I(E1)->root->objectid; 
+ E0 = BTRFS_I(E1)->root->root_key.objectid; 
// Infered from: (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_export_btrfs_encode_fh.{c.sanitized.c,res.c.sanitized.res.c}: btrfs_encode_fh), (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_export_btrfs_encode_fh.{c.sanitized.c,res.c.sanitized.res.c}: btrfs_encode_fh)
// Recall: 0.29, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
@@
expression E0, E1;
@@
- btrfs_qgroup_free_refroot(BTRFS_I(E0)->root->fs_info,                           BTRFS_I(E0)->root->objectid, E1.bytes_changed,                           BTRFS_QGROUP_RSV_DATA); 
+ btrfs_qgroup_free_refroot(BTRFS_I(E0)->root->fs_info,                           BTRFS_I(E0)->root->root_key.objectid,                           E1.bytes_changed, BTRFS_QGROUP_RSV_DATA); 
// Infered from: (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_qgroup_btrfs_qgroup_check_reserved_leak.{c.sanitized.c,res.c.sanitized.res.c}: btrfs_qgroup_check_reserved_leak), (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_qgroup___btrfs_qgroup_release_data.{c.sanitized.c,res.c.sanitized.res.c}: __btrfs_qgroup_release_data)
// Recall: 0.29, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
@@
expression E0, E1;
@@
- btrfs_debug(E0, "cleaner removing %llu", E1->objectid); 
+ btrfs_debug(E0, "cleaner removing %llu", E1->root_key.objectid); 
// Infered from: (./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_transaction_btrfs_clean_one_deleted_snapshot.{c.sanitized.c,res.c.sanitized.res.c}: btrfs_clean_one_deleted_snapshot)
// Recall: 0.14, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 4 rules):
// -- Edit Location --
// Recall: 0.83, Precision: 1.00
// -- Node Change --
// Recall: 0.86, Precision: 0.86
// -- General --
// Functions fully changed: 4/6(66%)

/*
Functions where the patch did not apply:
 - ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_backref_btrfs_check_shared.c.sanitized.c: btrfs_check_shared
*/
/*
Functions where the patch produced incorrect changes:
 - ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_export_btrfs_encode_fh.c.sanitized.c: btrfs_encode_fh
*/

// ---------------------------------------------

HANDLING: ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_transaction_btrfs_clean_one_deleted_snapshot.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 11 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 11 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 20 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 20 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 29 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 29 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 23
               with rule_elem: -btrfs_debug
                                 >>> btrfs_debug(E0, "cleaner removing %llu",
                                                 E1->root_key.objectid);
                               -(-E0-, -"-cleaner removing -%-llu-"-,
                                 -E1-->-objectid-)-;
               with binding: [rule starting on line 29.E1 --> root;
                             rule starting on line 29.E0 --> fs_info]
     binding out = []
     transform one node: 23
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_transaction_btrfs_clean_one_deleted_snapshot.c.sanitized.c
+++ /tmp/cocci-output-32312-df8e4a-1533533124_2018-08-06_4fd786e6c3d6_transaction_btrfs_clean_one_deleted_snapshot.c.sanitized.c
@@ -11,7 +11,7 @@ int btrfs_clean_one_deleted_snapshot(str
   root = list_first_entry(&fs_info->dead_roots, struct btrfs_root, root_list);
   list_del_init(&root->root_list);
   spin_unlock(&fs_info->trans_lock);
-  btrfs_debug(fs_info, "cleaner removing %llu", root->objectid);
+  btrfs_debug(fs_info, "cleaner removing %llu", root->root_key.objectid);
   btrfs_kill_all_delayed_nodes(root);
   if (btrfs_header_backref_rev(root->node) < BTRFS_MIXED_BACKREF_REV)
     ret = btrfs_drop_snapshot(root, NULL, 0, 0);
Check duplication for 1 files
