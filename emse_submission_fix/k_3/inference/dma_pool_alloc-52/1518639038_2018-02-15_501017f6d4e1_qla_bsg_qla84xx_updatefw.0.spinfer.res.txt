init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./dma_pool_alloc-52/final_response_0.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
identifier I2, I3;
expression E1, E0, E4, E5;
@@
- E0 = dma_pool_alloc(E1->I2, I3, &E4); 
+ E0 = dma_pool_zalloc(E1->I2, I3, &E4); 
  ...
- memset(E0, 0, E5); 
// Infered from: (./dma_pool_alloc-52/1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.{c.sanitized.c,res.c.sanitized.res.c}: qla84xx_updatefw), (./dma_pool_alloc-52/1518634820_2018-02-15_8d35a9dc4244_ql4_mbx_qla4xxx_set_chap.{c.sanitized.c,res.c.sanitized.res.c}: qla4xxx_set_chap), (./dma_pool_alloc-52/1518632953_2018-02-14_ddd05979f89c_bdc_ep_ep_bd_list_alloc.{c.sanitized.c,res.c.sanitized.res.c}: ep_bd_list_alloc)
// Recall: 1.00, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 1 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 3/3(100%)


// ---------------------------------------------

HANDLING: ./dma_pool_alloc-52/1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 70
               with rule_elem: -E0
                                 >>> E0 = dma_pool_zalloc(E1->I2, I3, &E4);
                                -= -dma_pool_alloc-(-E1-->-I2-, -I3-, -&-E4-)-;
               with binding: [rule starting on line 1.E4 --> mn_dma;
                             rule starting on line 1.I3 --> id GFP_KERNEL;
                             rule starting on line 1.I2 --> id s_dma_pool;
                             rule starting on line 1.E1 --> ha;
                             rule starting on line 1.E0 --> mn]
          transform state: 84
               with rule_elem: -memset-(-E0-, -0-, -E5-)-;
               with binding: [rule starting on line 1.E0 --> mn]
     binding out = []
     transform one node: 84
     transform one node: 70
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./dma_pool_alloc-52/1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.c.sanitized.c
+++ /tmp/cocci-output-32375-29019f-1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.c.sanitized.c
@@ -46,7 +46,7 @@ static int qla84xx_updatefw(struct bsg_j
       goto done_unmap_sg;
     }
   sg_copy_to_buffer(bsg_job->request_payload.sg_list, bsg_job->request_payload.sg_cnt, fw_buf, data_len);
-  mn = dma_pool_alloc(ha->s_dma_pool, GFP_KERNEL, &mn_dma);
+  mn = dma_pool_zalloc(ha->s_dma_pool, GFP_KERNEL, &mn_dma);
   if (!mn)
     {
       ql_log(ql_log_warn, vha, 0x7036, "DMA alloc failed for fw buffer.\n");
@@ -55,7 +55,6 @@ static int qla84xx_updatefw(struct bsg_j
     }
   flag = bsg_request->rqst_data.h_vendor.vendor_cmd[1];
   fw_ver = le32_to_cpu(*((uint32_t *)((uint32_t *)fw_buf + 2)));
-  memset(mn, 0, sizeof(struct access_chip_84xx));
   mn->entry_type = VERIFY_CHIP_IOCB_TYPE;
   mn->entry_count = 1;
   options = VCO_FORCE_UPDATE | VCO_END_OF_DATA;
Check duplication for 1 files
