init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./random_ether_addr-84/sp_out.final.gpt4.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression arg;
@@
- random_ether_addr(arg)
+ eth_random_addr(arg)



HANDLING: ./random_ether_addr-84/1529689860_2018-06-22_6c1f0a1ffb7c_i40e_main_i40e_config_netdev.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 62
               with rule_elem: -random_ether_addr
                                 >>> eth_random_addr(arg)
                               -(-arg-)
               with binding: [rule starting on line 1.arg --> mac_addr]
     binding out = []
     transform one node: 62
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./random_ether_addr-84/1529689860_2018-06-22_6c1f0a1ffb7c_i40e_main_i40e_config_netdev.c.sanitized.c
+++ /tmp/cocci-output-64427-5565a9-1529689860_2018-06-22_6c1f0a1ffb7c_i40e_main_i40e_config_netdev.c.sanitized.c
@@ -43,7 +43,7 @@ static int i40e_config_netdev(struct i40
     {
 
       snprintf(netdev->name, IFNAMSIZ, "%.*sv%%d", IFNAMSIZ - 4, pf->vsi[pf->lan_vsi]->netdev->name);
-      random_ether_addr(mac_addr);
+      eth_random_addr(mac_addr);
       spin_lock_bh(&vsi->mac_filter_hash_lock);
       i40e_add_mac_filter(vsi, mac_addr);
       spin_unlock_bh(&vsi->mac_filter_hash_lock);
Check duplication for 1 files
