init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./kees_timer1/sp_out.final.gpt4.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression timer_obj, handler_func, timer_data;
@@
- init_timer(&timer_obj);
- timer_obj.function = handler_func;
- timer_obj.data = timer_data;
+ setup_timer(&timer_obj, handler_func, timer_data);



HANDLING: ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_esas2r_main_esas2r_kickoff_timer.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 6
               with rule_elem: -init_timer-(-&-timer_obj-)-;
               with binding: [rule starting on line 1.timer_obj --> a->timer]
          transform state: 7
               with rule_elem: -timer_obj-.-function -= -handler_func-;
               with binding: [rule starting on line 1.handler_func --> esas2r_timer_callback;
                             rule starting on line 1.timer_obj --> a->timer]
          transform state: 8
               with rule_elem: -timer_obj
                                 >>> setup_timer(&timer_obj, handler_func,
                                                 timer_data);
                               -.-data -= -timer_data-;
               with binding: [rule starting on line 1.timer_data --> (unsigned
                             long)a;
                             rule starting on line 1.handler_func --> esas2r_timer_callback;
                             rule starting on line 1.timer_obj --> a->timer]
     binding out = []
     transform one node: 8
     transform one node: 7
     transform one node: 6
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_esas2r_main_esas2r_kickoff_timer.c.sanitized.c
+++ /tmp/cocci-output-64258-f2edfb-1508184939_2017-10-16_b9eaf1872222_esas2r_main_esas2r_kickoff_timer.c.sanitized.c
@@ -1,8 +1,6 @@
 void esas2r_kickoff_timer(struct esas2r_adapter *a)
 {
-  init_timer(&a->timer);
-  a->timer.function = esas2r_timer_callback;
-  a->timer.data = (unsigned long)a;
+  setup_timer(&a->timer, esas2r_timer_callback, (unsigned long)a);
   a->timer.expires = jiffies + msecs_to_jiffies(100);
   add_timer(&a->timer);
 }
\ No newline at end of file
Check duplication for 1 files
