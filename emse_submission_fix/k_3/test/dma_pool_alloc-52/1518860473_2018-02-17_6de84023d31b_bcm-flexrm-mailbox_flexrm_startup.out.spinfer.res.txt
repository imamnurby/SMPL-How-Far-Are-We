init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./dma_pool_alloc-52/sp_out.final.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
identifier I2, I3;
expression E1, E0, E4, E5;
@@
- E0 = dma_pool_alloc(E1->I2, I3, &E4); 
+ E0 = dma_pool_zalloc(E1->I2, I3, &E4); 
  ...
- memset(E0, 0, E5); 
// Infered from: (./dma_pool_alloc-52/1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.{c.sanitized.c,res.c.sanitized.res.c}: qla84xx_updatefw), (./dma_pool_alloc-52/1518634820_2018-02-15_8d35a9dc4244_ql4_mbx_qla4xxx_set_chap.{c.sanitized.c,res.c.sanitized.res.c}: qla4xxx_set_chap), (./dma_pool_alloc-52/1518632953_2018-02-14_ddd05979f89c_bdc_ep_ep_bd_list_alloc.{c.sanitized.c,res.c.sanitized.res.c}: ep_bd_list_alloc)
// Recall: 1.00, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 1 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 3/3(100%)


// ---------------------------------------------

HANDLING: ./dma_pool_alloc-52/1518860473_2018-02-17_6de84023d31b_bcm-flexrm-mailbox_flexrm_startup.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 51
               with rule_elem: -E0
                                 >>> E0 = dma_pool_zalloc(E1->I2, I3, &E4);
                                -= -dma_pool_alloc-(-E1-->-I2-, -I3-, -&-E4-)-;
               with binding: [rule starting on line 1.E4 --> ring->cmpl_dma_base;
                             rule starting on line 1.I3 --> id GFP_KERNEL;
                             rule starting on line 1.I2 --> id cmpl_pool;
                             rule starting on line 1.E1 --> ring->mbox;
                             rule starting on line 1.E0 --> ring->cmpl_base]
          transform state: 63
               with rule_elem: -memset-(-E0-, -0-, -E5-)-;
               with binding: [rule starting on line 1.E0 --> ring->cmpl_base]
     binding out = []
     transform one node: 63
     transform one node: 51
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./dma_pool_alloc-52/1518860473_2018-02-17_6de84023d31b_bcm-flexrm-mailbox_flexrm_startup.c.sanitized.c
+++ /tmp/cocci-output-66254-33e697-1518860473_2018-02-17_6de84023d31b_bcm-flexrm-mailbox_flexrm_startup.c.sanitized.c
@@ -27,14 +27,14 @@ static int flexrm_startup(struct mbox_ch
       flexrm_write_desc(ring->bd_base + off, d);
     }
 
-  ring->cmpl_base = dma_pool_alloc(ring->mbox->cmpl_pool, GFP_KERNEL, &ring->cmpl_dma_base);
+  ring->cmpl_base = dma_pool_zalloc(ring->mbox->cmpl_pool, GFP_KERNEL,
+                                    &ring->cmpl_dma_base);
   if (!ring->cmpl_base)
     {
       dev_err(ring->mbox->dev, "can't allocate completion memory for ring%d\n", ring->num);
       ret = -ENOMEM;
       goto fail_free_bd_memory;
     }
-  memset(ring->cmpl_base, 0, RING_CMPL_SIZE);
 
   if (ring->irq == UINT_MAX)
     {
Check duplication for 1 files
