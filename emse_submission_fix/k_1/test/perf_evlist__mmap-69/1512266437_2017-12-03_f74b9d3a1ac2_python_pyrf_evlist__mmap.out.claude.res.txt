init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./perf_evlist__mmap-69/sp_out.final.claude.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression evlist, pages;
expression flag;
@@
- perf_evlist__mmap(evlist, pages, flag)
+ perf_evlist__mmap(evlist, pages)



HANDLING: ./perf_evlist__mmap-69/1512266437_2017-12-03_f74b9d3a1ac2_python_pyrf_evlist__mmap.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 16
               with rule_elem: -perf_evlist__mmap
                                 >>> perf_evlist__mmap(evlist, pages)
                               -(-evlist-, -pages-, -flag-)
               with binding: [rule starting on line 1.pages --> pages;
                             rule starting on line 1.evlist --> evlist]
     binding out = []
     transform one node: 16
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./perf_evlist__mmap-69/1512266437_2017-12-03_f74b9d3a1ac2_python_pyrf_evlist__mmap.c.sanitized.c
+++ /tmp/cocci-output-4098896-919d95-1512266437_2017-12-03_f74b9d3a1ac2_python_pyrf_evlist__mmap.c.sanitized.c
@@ -5,7 +5,7 @@ static PyObject *pyrf_evlist__mmap(struc
   int pages = 128, overwrite = false;
   if (!PyArg_ParseTupleAndKeywords(args, kwargs, "|ii", kwlist, &pages, &overwrite))
     return NULL;
-  if (perf_evlist__mmap(evlist, pages, overwrite) < 0)
+  if (perf_evlist__mmap(evlist, pages) < 0)
     {
       PyErr_SetFromErrno(PyExc_OSError);
       return NULL;
Check duplication for 1 files
