init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./free_bootmem-77/sp_out.final.deepseek-chat.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression e1, e2;
@@
- free_bootmem(e1, e2)
+ memblock_free(e1, e2)



HANDLING: ./free_bootmem-77/1540937361_2018-10-30_2013288f7238_smu_smu_init.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 136
               with rule_elem: -free_bootmem
                                 >>> memblock_free(e1, e2)
                               -(-e1-, -e2-)
               with binding: [rule starting on line 1.e2 --> sizeof(struct
                             smu_device);
                             rule starting on line 1.e1 --> __pa(smu)]
     binding out = []
     transform one node: 136
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./free_bootmem-77/1540937361_2018-10-30_2013288f7238_smu_smu_init.c.sanitized.c
+++ /tmp/cocci-output-93580-e73e69-1540937361_2018-10-30_2013288f7238_smu_smu_init.c.sanitized.c
@@ -80,7 +80,7 @@ fail_msg_node:
 fail_db_node:
   of_node_put(smu->db_node);
 fail_bootmem:
-  free_bootmem(__pa(smu), sizeof(struct smu_device));
+  memblock_free(__pa(smu), sizeof(struct smu_device));
   smu = NULL;
 fail_np:
   of_node_put(np);
Check duplication for 1 files
