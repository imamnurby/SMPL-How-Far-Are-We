init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./uartlite/sp_out.final.deepseek-chat.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression port;
constant REG;
@@
- ioread32be(port->membase + REG)
+ uart_in32(REG, port)



HANDLING: ./uartlite/1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_console_wait_tx.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     (ONCE) warning: ULITE_STATUS treated as a constant
     transformation info returned:
          transform state: 13
               with rule_elem: -ioread32be
                                 >>> uart_in32(REG, port)
                               -(-port-->-membase -+ -REG-)
               with binding: [rule starting on line 1.REG --> ULITE_STATUS;
                             rule starting on line 1.port --> port]
     binding out = []
     transform one node: 13
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./uartlite/1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_console_wait_tx.c.sanitized.c
+++ /tmp/cocci-output-19770-c8744a-1360605874_2013-02-11_6d53c3b71d32_uartlite_ulite_console_wait_tx.c.sanitized.c
@@ -5,7 +5,7 @@ static void ulite_console_wait_tx(struct
 
   for (i = 0; i < 100000; i++)
     {
-      val = ioread32be(port->membase + ULITE_STATUS);
+      val = uart_in32(ULITE_STATUS, port);
       if ((val & ULITE_STATUS_TXFULL) == 0)
         break;
       cpu_relax();
Check duplication for 1 files
