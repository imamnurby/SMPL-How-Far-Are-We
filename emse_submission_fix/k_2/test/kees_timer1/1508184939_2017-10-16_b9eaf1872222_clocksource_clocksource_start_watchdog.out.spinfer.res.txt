init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./kees_timer1/sp_out.final.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
type T1;
expression E0;
@@
- init_timer(&E0->eh_timer); 
- E0->eh_timer.data = (T1 )E0; 
- E0->eh_timer.function = fas216_eh_timer; 
+ setup_timer(&E0->eh_timer, fas216_eh_timer, (T1 )E0); 
// Infered from: (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_fas216_fas216_init.{c.sanitized.c,res.c.sanitized.res.c}: fas216_init)
// Recall: 0.18, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
@@
identifier I1, I2;
type T3;
expression E0;
@@
- init_timer(&E0->I1); 
- E0->I1.function = I2; 
- E0->I1.data = (T3 )E0; 
+ setup_timer(&E0->I1, I2, (T3 )E0); 
// Infered from: (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_dasd_dasd_alloc_device.{c.sanitized.c,res.c.sanitized.res.c}: dasd_alloc_device), (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_bfad_bfad_init_timer.{c.sanitized.c,res.c.sanitized.res.c}: bfad_init_timer)
// Recall: 0.36, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
@@
identifier I1;
expression E0;
@@
- init_timer(&E0); 
- E0.function = I1; 
+ setup_timer(&E0, I1, 0UL); 
// Infered from: (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_nmi_init_nmi_wdt.{c.sanitized.c,res.c.sanitized.res.c}: init_nmi_wdt), (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_isdn_common_isdn_init.{c.sanitized.c,res.c.sanitized.res.c}: isdn_init)
// False positives: (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_bfad_bfad_init_timer.res.c.sanitized.res.c: bfad_init_timer), (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_dasd_dasd_alloc_device.res.c.sanitized.res.c: dasd_alloc_device)
// Recall: 0.45, Precision: 0.83, Matching recall: 0.71

// ---------------------------------------------
@@
type T1;
expression E0;
@@
- init_timer(&E0->eternal_timer); 
+ setup_timer(&E0->eternal_timer, &arcmsr_request_device_map, (T1 )E0); 
  ...
- E0->eternal_timer.data = (T1 )E0; 
- E0->eternal_timer.function = &arcmsr_request_device_map; 
// Infered from: (./kees_timer1/1508184939_2017-10-16_b9eaf1872222_arcmsr_hba_arcmsr_probe.{c.sanitized.c,res.c.sanitized.res.c}: arcmsr_probe)
// Recall: 0.18, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 4 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 6/6(100%)


// ---------------------------------------------

warning: line 7: should fas216_eh_timer be a metavariable?
warning: line 46: should arcmsr_request_device_map be a metavariable?
HANDLING: ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_clocksource_clocksource_start_watchdog.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 13 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 13 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
rule starting on line 26 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 26 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 13
               with rule_elem: -init_timer-(-&-E0-)-;
               with binding: [rule starting on line 26.E0 --> watchdog_timer]
          transform state: 14
               with rule_elem: -E0
                                 >>> setup_timer(&E0, I1, 0UL);
                               -.-function -= -I1-;
               with binding: [rule starting on line 26.I1 --> id clocksource_watchdog;
                             rule starting on line 26.E0 --> watchdog_timer]
     binding out = []
     transform one node: 14
     transform one node: 13
-----------------------------------------------------------------------
rule starting on line 38 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 38 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./kees_timer1/1508184939_2017-10-16_b9eaf1872222_clocksource_clocksource_start_watchdog.c.sanitized.c
+++ /tmp/cocci-output-20156-48271f-1508184939_2017-10-16_b9eaf1872222_clocksource_clocksource_start_watchdog.c.sanitized.c
@@ -2,8 +2,7 @@ static inline void clocksource_start_wat
 {
   if (watchdog_running || !watchdog || list_empty(&watchdog_list))
     return;
-  init_timer(&watchdog_timer);
-  watchdog_timer.function = clocksource_watchdog;
+  setup_timer(&watchdog_timer, clocksource_watchdog, 0UL);
   watchdog_timer.expires = jiffies + WATCHDOG_INTERVAL;
   add_timer_on(&watchdog_timer, cpumask_first(cpu_online_mask));
   watchdog_running = 1;
Check duplication for 1 files
