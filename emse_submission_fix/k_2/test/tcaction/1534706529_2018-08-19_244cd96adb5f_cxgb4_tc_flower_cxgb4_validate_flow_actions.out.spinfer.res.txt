init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./tcaction/sp_out.final.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression E0, E1;
iterator name list_for_each_entry;
iterator name tcf_exts_for_each_action;
@@
- LIST_HEAD(actions); 
+ int i; 
  ...
- tcf_exts_to_list(E0, &actions); 
- list_for_each_entry (E1, &actions, list)  
+ tcf_exts_for_each_action (i, E1, E0)  
  {
  ...
  }
// Infered from: (./tcaction/1534706529_2018-08-19_244cd96adb5f_spectrum_flower_mlxsw_sp_flower_parse_actions.{c.sanitized.c,res.c.sanitized.res.c}: mlxsw_sp_flower_parse_actions), (./tcaction/1534706529_2018-08-19_244cd96adb5f_en_tc_parse_tc_fdb_actions.{c.sanitized.c,res.c.sanitized.res.c}: parse_tc_fdb_actions)
// Recall: 1.00, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 1 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 2/2(100%)


// ---------------------------------------------

warning: line 6: should actions be a metavariable?
warning: line 9: should actions be a metavariable?
warning: line 10: should actions be a metavariable?
warning: line 10: should list be a metavariable?
HANDLING: ./tcaction/1534706529_2018-08-19_244cd96adb5f_cxgb4_tc_flower_cxgb4_validate_flow_actions.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 10
               with rule_elem: -LIST_HEAD
                                 >>> int i;
                               -(-actions-)-;
               with binding: []
          transform state: 11
               with rule_elem: -tcf_exts_to_list-(-E0-, -&-actions-)-;
               with binding: [rule starting on line 1.E0 --> cls->exts]
          transform state: 12
               with rule_elem: -list_for_each_entry -(-E1-, -&-actions-,
                                                      -list-)
                                 >>> tcf_exts_for_each_action(i, E1, E0)
                                
               with binding: [rule starting on line 1.E1 --> a;
                             rule starting on line 1.E0 --> cls->exts]
     binding out = []
     transform one node: 12
     transform one node: 11
     transform one node: 10
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./tcaction/1534706529_2018-08-19_244cd96adb5f_cxgb4_tc_flower_cxgb4_validate_flow_actions.c.sanitized.c
+++ /tmp/cocci-output-20476-158f1a-1534706529_2018-08-19_244cd96adb5f_cxgb4_tc_flower_cxgb4_validate_flow_actions.c.sanitized.c
@@ -4,9 +4,7 @@ static int cxgb4_validate_flow_actions(s
   bool act_redir = false;
   bool act_pedit = false;
   bool act_vlan = false;
-  LIST_HEAD(actions);
-  tcf_exts_to_list(cls->exts, &actions);
-  list_for_each_entry(a, &actions, list)
+  int i;tcf_exts_for_each_action(i, a, cls->exts)
   {
     if (is_tcf_gact_ok(a))
       {
Check duplication for 1 files
