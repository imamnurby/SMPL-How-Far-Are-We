init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./ttm_bo_init-60/sp_out.final.claude.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression bdev, bo, size, type, placement, page_align, interruptible, acc_size, sg, reserv, destroy;
@@
- ttm_bo_init(bdev, bo, size, type, placement, page_align, interruptible, NULL, acc_size, sg, reserv, destroy)
+ ttm_bo_init(bdev, bo, size, type, placement, page_align, interruptible, acc_size, sg, reserv, destroy)



HANDLING: ./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_hibmc_ttm_hibmc_bo_create.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 38
               with rule_elem: -ttm_bo_init
                                 >>> ttm_bo_init(bdev, bo, size, type,
                                                 placement, page_align,
                                                 interruptible, acc_size, sg,
                                                 reserv, destroy)
                               -(-bdev-, -bo-, -size-, -type-, -placement-,
                                 -page_align-, -interruptible-, -NULL-,
                                 -acc_size-, -sg-, -reserv-, -destroy-)
               with binding: [rule starting on line 1.destroy --> hibmc_bo_ttm_destroy;
                             rule starting on line 1.reserv --> NULL;
                             rule starting on line 1.sg --> NULL;
                             rule starting on line 1.acc_size --> acc_size;
                             rule starting on line 1.interruptible --> false;
                             rule starting on line 1.page_align --> align >>
                             PAGE_SHIFT;
                             rule starting on line 1.placement --> &hibmcbo->placement;
                             rule starting on line 1.type --> ttm_bo_type_device;
                             rule starting on line 1.size --> size;
                             rule starting on line 1.bo --> &hibmcbo->bo;
                             rule starting on line 1.bdev --> &hibmc->bdev]
     binding out = []
     transform one node: 38
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./ttm_bo_init-60/1519311151_2018-02-22_724daa4fd65d_hibmc_ttm_hibmc_bo_create.c.sanitized.c
+++ /tmp/cocci-output-19135-45ea21-1519311151_2018-02-22_724daa4fd65d_hibmc_ttm_hibmc_bo_create.c.sanitized.c
@@ -20,7 +20,9 @@ int hibmc_bo_create(struct drm_device *d
   hibmcbo->bo.bdev = &hibmc->bdev;
   hibmc_ttm_placement(hibmcbo, TTM_PL_FLAG_VRAM | TTM_PL_FLAG_SYSTEM);
   acc_size = ttm_bo_dma_acc_size(&hibmc->bdev, size, sizeof(struct hibmc_bo));
-  ret = ttm_bo_init(&hibmc->bdev, &hibmcbo->bo, size, ttm_bo_type_device, &hibmcbo->placement, align >> PAGE_SHIFT, false, NULL, acc_size, NULL, NULL, hibmc_bo_ttm_destroy);
+  ret = ttm_bo_init(&hibmc->bdev, &hibmcbo->bo, size, ttm_bo_type_device,
+                    &hibmcbo->placement, align >> PAGE_SHIFT, false, acc_size,
+                    NULL, NULL, hibmc_bo_ttm_destroy);
   if (ret)
     {
       hibmc_bo_unref(&hibmcbo);
Check duplication for 1 files
