init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./dma_pool_alloc-52/sp_out.final.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
identifier I2, I3;
expression E0, E1, E4, E5;
@@
- E0 = dma_pool_alloc(E1->I2, I3, &E4); 
+ E0 = dma_pool_zalloc(E1->I2, I3, &E4); 
  ...
- memset(E0, 0, E5); 
// Infered from: (./dma_pool_alloc-52/1518639038_2018-02-15_501017f6d4e1_qla_bsg_qla84xx_updatefw.{c.sanitized.c,res.c.sanitized.res.c}: qla84xx_updatefw), (./dma_pool_alloc-52/1518632953_2018-02-14_ddd05979f89c_bdc_ep_ep_bd_list_alloc.{c.sanitized.c,res.c.sanitized.res.c}: ep_bd_list_alloc)
// Recall: 1.00, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 1 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 2/2(100%)


// ---------------------------------------------

HANDLING: ./dma_pool_alloc-52/1518711906_2018-02-15_61b142afb2e2_megaraid_sas_base_megasas_create_frame_pool.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 53
               with rule_elem: -E0
                                 >>> E0 = dma_pool_zalloc(E1->I2, I3, &E4);
                                -= -dma_pool_alloc-(-E1-->-I2-, -I3-, -&-E4-)-;
               with binding: [rule starting on line 1.E4 --> cmd->frame_phys_addr;
                             rule starting on line 1.I3 --> id GFP_KERNEL;
                             rule starting on line 1.I2 --> id frame_dma_pool;
                             rule starting on line 1.E1 --> instance;
                             rule starting on line 1.E0 --> cmd->frame]
          transform state: 69
               with rule_elem: -memset-(-E0-, -0-, -E5-)-;
               with binding: [rule starting on line 1.E0 --> cmd->frame]
     binding out = []
     transform one node: 69
     transform one node: 53
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./dma_pool_alloc-52/1518711906_2018-02-15_61b142afb2e2_megaraid_sas_base_megasas_create_frame_pool.c.sanitized.c
+++ /tmp/cocci-output-19993-8aed90-1518711906_2018-02-15_61b142afb2e2_megaraid_sas_base_megasas_create_frame_pool.c.sanitized.c
@@ -32,7 +32,8 @@ static int megasas_create_frame_pool(str
   for (i = 0; i < max_cmd; i++)
     {
       cmd = instance->cmd_list[i];
-      cmd->frame = dma_pool_alloc(instance->frame_dma_pool, GFP_KERNEL, &cmd->frame_phys_addr);
+      cmd->frame = dma_pool_zalloc(instance->frame_dma_pool, GFP_KERNEL,
+                                   &cmd->frame_phys_addr);
       cmd->sense = dma_pool_alloc(instance->sense_dma_pool, GFP_KERNEL, &cmd->sense_phys_addr);
 
       if (!cmd->frame || !cmd->sense)
@@ -41,7 +42,6 @@ static int megasas_create_frame_pool(str
           megasas_teardown_frame_pool(instance);
           return -ENOMEM;
         }
-      memset(cmd->frame, 0, instance->mfi_frame_size);
       cmd->frame->io.context = cpu_to_le32(cmd->index);
       cmd->frame->io.pad_0 = 0;
       if ((instance->adapter_type == MFI_SERIES) && reset_devices)
Check duplication for 1 files
