init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./free_bootmem-77/sp_out.final.spinfer.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression E0, E1;
@@
- free_bootmem(E0, E1); 
+ memblock_free(E0, E1); 
// Infered from: (./free_bootmem-77/1540937361_2018-10-30_2013288f7238_tce_64_free_tce_table.{c,res.c}: free_tce_table), (./free_bootmem-77/1540937361_2018-10-30_2013288f7238_tce_64_free_tce_table.{c,res.c}: free_tce_table), (./free_bootmem-77/1540937361_2018-10-30_2013288f7238_init_free_memmap.{c,res.c}: free_memmap), (./free_bootmem-77/1540937361_2018-10-30_2013288f7238_init_free_memmap.{c,res.c}: free_memmap)
// Recall: 1.00, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 1 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 1.00, Precision: 1.00
// -- General --
// Functions fully changed: 2/2(100%)


// ---------------------------------------------

HANDLING: ./free_bootmem-77/1540937361_2018-10-30_2013288f7238_xhci-dbc_early_xdbc_setup_hardware.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 32
               with rule_elem: -free_bootmem
                                 >>> memblock_free(E0, E1);
                               -(-E0-, -E1-)-;
               with binding: [rule starting on line 1.E1 --> PAGE_SIZE;
                             rule starting on line 1.E0 --> xdbc.table_dma]
          transform state: 38
               with rule_elem: -free_bootmem
                                 >>> memblock_free(E0, E1);
                               -(-E0-, -E1-)-;
               with binding: [rule starting on line 1.E1 --> PAGE_SIZE;
                             rule starting on line 1.E0 --> xdbc.out_dma]
     binding out = []
     transform one node: 38
     transform one node: 32
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./free_bootmem-77/1540937361_2018-10-30_2013288f7238_xhci-dbc_early_xdbc_setup_hardware.c.sanitized.c
+++ /tmp/cocci-output-20132-9e2dd3-1540937361_2018-10-30_2013288f7238_xhci-dbc_early_xdbc_setup_hardware.c.sanitized.c
@@ -13,9 +13,9 @@ int __init early_xdbc_setup_hardware(voi
       xdbc_free_ring(&xdbc.out_ring);
       xdbc_free_ring(&xdbc.in_ring);
       if (xdbc.table_dma)
-        free_bootmem(xdbc.table_dma, PAGE_SIZE);
+        memblock_free(xdbc.table_dma, PAGE_SIZE);
       if (xdbc.out_dma)
-        free_bootmem(xdbc.out_dma, PAGE_SIZE);
+        memblock_free(xdbc.out_dma, PAGE_SIZE);
       xdbc.table_base = NULL;
       xdbc.out_buf = NULL;
     }
Check duplication for 1 files
