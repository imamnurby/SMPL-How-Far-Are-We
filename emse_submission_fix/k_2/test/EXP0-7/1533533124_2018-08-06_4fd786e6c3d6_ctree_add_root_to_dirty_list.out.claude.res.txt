init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./EXP0-7/sp_out.final.claude.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression E;
@@
- E->objectid
+ E->root_key.objectid
@@
expression E;
@@
- BTRFS_I(E)->root->objectid
+ BTRFS_I(E)->root->root_key.objectid



HANDLING: ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_ctree_add_root_to_dirty_list.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 21
               with rule_elem: -E
                                 >>> E->root_key.objectid
                               -->-objectid
               with binding: [rule starting on line 1.E --> root]
     binding out = []
     transform one node: 21
-----------------------------------------------------------------------
rule starting on line 6 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 6 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_ctree_add_root_to_dirty_list.c.sanitized.c
+++ /tmp/cocci-output-18374-80e3c1-1533533124_2018-08-06_4fd786e6c3d6_ctree_add_root_to_dirty_list.c.sanitized.c
@@ -7,7 +7,7 @@ static void add_root_to_dirty_list(struc
   if (!test_and_set_bit(BTRFS_ROOT_DIRTY, &root->state))
     {
 
-      if (root->objectid == BTRFS_EXTENT_TREE_OBJECTID)
+      if (root->root_key.objectid == BTRFS_EXTENT_TREE_OBJECTID)
         list_move_tail(&root->dirty_list, &fs_info->dirty_cowonly_roots);
       else
         list_move(&root->dirty_list, &fs_info->dirty_cowonly_roots);
Check duplication for 1 files
