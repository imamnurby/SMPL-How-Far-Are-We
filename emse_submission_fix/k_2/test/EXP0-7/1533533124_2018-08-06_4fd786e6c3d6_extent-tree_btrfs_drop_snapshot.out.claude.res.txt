init_defs_builtins: /usr/bin/../lib/coccinelle/standard.h
-----------------------------------------------------------------------
processing semantic patch file: ./EXP0-7/sp_out.final.claude.cocci
with isos from: /usr/bin/../lib/coccinelle/standard.iso
-----------------------------------------------------------------------
@@
expression E;
@@
- E->objectid
+ E->root_key.objectid
@@
expression E;
@@
- BTRFS_I(E)->root->objectid
+ BTRFS_I(E)->root->root_key.objectid



HANDLING: ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_extent-tree_btrfs_drop_snapshot.c.sanitized.c
-----------------------------------------------------------------------
let's go
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
rule starting on line 1 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 1 satisfied:
binding in = []
binding relevant in = []
     transformation info returned:
          transform state: 20
               with rule_elem: -E
                                 >>> E->root_key.objectid
                               -->-objectid
               with binding: [rule starting on line 1.E --> root]
     binding out = []
     transform one node: 20
-----------------------------------------------------------------------
rule starting on line 6 = 
-----------------------------------------------------------------------
dependencies for rule rule starting on line 6 satisfied:
binding in = []
binding relevant in = []
-----------------------------------------------------------------------
Finished
-----------------------------------------------------------------------
diff = 
--- ./EXP0-7/1533533124_2018-08-06_4fd786e6c3d6_extent-tree_btrfs_drop_snapshot.c.sanitized.c
+++ /tmp/cocci-output-18381-b8c01d-1533533124_2018-08-06_4fd786e6c3d6_extent-tree_btrfs_drop_snapshot.c.sanitized.c
@@ -11,7 +11,7 @@ int btrfs_drop_snapshot(struct btrfs_roo
   int ret;
   int level;
   bool root_dropped = false;
-  btrfs_debug(fs_info, "Drop subvolume %llu", root->objectid);
+  btrfs_debug(fs_info, "Drop subvolume %llu", root->root_key.objectid);
   path = btrfs_alloc_path();
   if (!path)
     {
Check duplication for 1 files
